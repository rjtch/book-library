name: publish to registry
on:
  push:
    branches:
      - develop

env:
  PROJECT: book-library
  DOCKERIMAGE-BOOK-API: hergytchuinkou/book-api-kit
  DOCKERIMAGE-METRICS: hergytchuinkou/book-metrics-kit
  REGISTRY_DOMAIN: openshift-registry.adorsys.de

  APPNAME: adorsys.book-library

jobs:
  publish-book-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        run: make books-api
      - name: Tags
        run: |
          docker tag book-api-kit ${{ secrets.DOCKERHUB_USERNAME }}/book-api-kit:${{ github.sha }}
          docker tag book-api-kit ${{ secrets.DOCKERHUB_USERNAME }}/book-api-kit:latest
      - name: Push
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/book-api-kit:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/book-api-kit:latest

  publish-metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        run: make metrics
      - name: Tags
        run: |
          docker tag book-metrics-kit ${{ secrets.DOCKERHUB_USERNAME }}/book-metrics-kit:${{ github.sha }}
          docker tag book-metrics-kit ${{ secrets.DOCKERHUB_USERNAME }}/book-metrics-kit:latest
      - name: Push
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/book-metrics-kit:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/book-metrics-kit:latest

  openshift-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: OpenShift Action
        uses: redhat-developer/openshift-actions@v1.1
        with:
          version: 'latest'
          openshift_server_url: '{"openshift_server_url": "${{secrets.OPENSHIFT_SERVER_URL}}"}'
          parameters: '{"apitoken": "${{ secrets.api-token }}", "acceptUntrustedCerts": "true"}'
          cmd: |
            oc project ${PROJECT}
            oc new-build --strategy docker --binary --docker-image ${DOCKERIMAGE-BOOK-API} --name ${APPNAME}
            oc new-build --strategy docker --binary --docker-image ${DOCKERIMAGE-METRICS} --name ${APPNAME}

            oc start-build ${APPNAME} --from-dir . --follow
            oc new-app ${APPNAME}:latest
            oc expose svc/"${APPNAME}"